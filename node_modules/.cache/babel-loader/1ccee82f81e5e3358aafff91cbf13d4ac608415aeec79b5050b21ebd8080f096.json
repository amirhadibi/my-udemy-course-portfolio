{"ast":null,"code":"var _jsxFileName = \"/Users/prince/Documents/Projects/react/my-udemy-course-portfolio/src/components/Particles.js\",\n  _s = $RefreshSig$();\nimport Particles from \"react-tsparticles\";\nimport { loadSlim } from \"tsparticles-slim\"; // loads tsparticles-slim\n//import { loadFull } from \"tsparticles\"; // loads tsparticles\nimport { useCallback, useMemo } from \"react\";\n\n// tsParticles Repository: https://github.com/matteobruni/tsparticles\n// tsParticles Website: https://particles.js.org/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticlesComponent = props => {\n  _s();\n  // using useMemo is not mandatory, but it's recommended since this value can be memoized if static\n  const options = useMemo(() => {\n    // using an empty options object will load the default options, which are static particles with no background and 3px radius, opacity 100%, white color\n    // all options can be found here: https://particles.js.org/docs/interfaces/Options_Interfaces_IOptions.IOptions.html\n    return {\n      background: {\n        color: \"#000\" // this sets a background color for the canvas\n      },\n      fullScreen: {\n        enable: true,\n        // enabling this will make the canvas fill the entire screen, it's enabled by default\n        zIndex: -1 // this is the z-index value used when the fullScreen is enabled, it's 0 by default\n      },\n      interactivity: {\n        events: {\n          onClick: {\n            enable: true,\n            // enables the click event\n            mode: \"push\" // adds the particles on click\n          },\n          onHover: {\n            enable: true,\n            // enables the hover event\n            mode: \"repulse\" // make the particles run away from the cursor\n          }\n        },\n        modes: {\n          push: {\n            quantity: 10 // number of particles to add on click\n          },\n          repulse: {\n            distance: 100 // distance of the particles from the cursor\n          }\n        }\n      }\n    };\n  }, []);\n\n  // useCallback is not mandatory, but it's recommended since this callback can be memoized if static\n  const particlesInit = useCallback(engine => {\n    loadSlim(engine);\n    // loadFull(engine); // for this sample the slim version is enough, choose whatever you prefer, slim is smaller in size but doesn't have all the plugins and the mouse trail feature\n  }, []);\n\n  // setting an id can be useful for identifying the right particles component, this is useful for multiple instances or reusable components\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: props.id,\n    init: particlesInit,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n};\n_s(ParticlesComponent, \"S09+AMUDbBeUwQCtb/KU1O30zJc=\");\n_c = ParticlesComponent;\nexport default ParticlesComponent;\nvar _c;\n$RefreshReg$(_c, \"ParticlesComponent\");","map":{"version":3,"names":["Particles","loadSlim","useCallback","useMemo","jsxDEV","_jsxDEV","ParticlesComponent","props","_s","options","background","color","fullScreen","enable","zIndex","interactivity","events","onClick","mode","onHover","modes","push","quantity","repulse","distance","particlesInit","engine","id","init","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/prince/Documents/Projects/react/my-udemy-course-portfolio/src/components/Particles.js"],"sourcesContent":["import Particles from \"react-tsparticles\";\nimport { loadSlim } from \"tsparticles-slim\"; // loads tsparticles-slim\n//import { loadFull } from \"tsparticles\"; // loads tsparticles\nimport { useCallback, useMemo } from \"react\";\n\n// tsParticles Repository: https://github.com/matteobruni/tsparticles\n// tsParticles Website: https://particles.js.org/\nconst ParticlesComponent = (props) => {\n  // using useMemo is not mandatory, but it's recommended since this value can be memoized if static\n  const options = useMemo(() => {\n    // using an empty options object will load the default options, which are static particles with no background and 3px radius, opacity 100%, white color\n    // all options can be found here: https://particles.js.org/docs/interfaces/Options_Interfaces_IOptions.IOptions.html\n    return {\n      background: {\n        color: \"#000\", // this sets a background color for the canvas\n      },\n      fullScreen: {\n        enable: true, // enabling this will make the canvas fill the entire screen, it's enabled by default\n        zIndex: -1, // this is the z-index value used when the fullScreen is enabled, it's 0 by default\n      },\n      interactivity: {\n        events: {\n          onClick: {\n            enable: true, // enables the click event\n            mode: \"push\", // adds the particles on click\n          },\n          onHover: {\n            enable: true, // enables the hover event\n            mode: \"repulse\", // make the particles run away from the cursor\n          },\n        },\n        modes: {\n          push: {\n            quantity: 10, // number of particles to add on click\n          },\n          repulse: {\n            distance: 100, // distance of the particles from the cursor\n          },\n        },\n      },\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    };\n  }, []);\n\n  // useCallback is not mandatory, but it's recommended since this callback can be memoized if static\n  const particlesInit = useCallback((engine) => {\n    loadSlim(engine);\n    // loadFull(engine); // for this sample the slim version is enough, choose whatever you prefer, slim is smaller in size but doesn't have all the plugins and the mouse trail feature\n  }, []);\n\n  // setting an id can be useful for identifying the right particles component, this is useful for multiple instances or reusable components\n  return <Particles id={props.id} init={particlesInit} options={options} />;\n};\n\nexport default ParticlesComponent;\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,mBAAmB;AACzC,SAASC,QAAQ,QAAQ,kBAAkB,CAAC,CAAC;AAC7C;AACA,SAASC,WAAW,EAAEC,OAAO,QAAQ,OAAO;;AAE5C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACpC;EACA,MAAMC,OAAO,GAAGN,OAAO,CAAC,MAAM;IAC5B;IACA;IACA,OAAO;MACLO,UAAU,EAAE;QACVC,KAAK,EAAE,MAAM,CAAE;MACjB,CAAC;MACDC,UAAU,EAAE;QACVC,MAAM,EAAE,IAAI;QAAE;QACdC,MAAM,EAAE,CAAC,CAAC,CAAE;MACd,CAAC;MACDC,aAAa,EAAE;QACbC,MAAM,EAAE;UACNC,OAAO,EAAE;YACPJ,MAAM,EAAE,IAAI;YAAE;YACdK,IAAI,EAAE,MAAM,CAAE;UAChB,CAAC;UACDC,OAAO,EAAE;YACPN,MAAM,EAAE,IAAI;YAAE;YACdK,IAAI,EAAE,SAAS,CAAE;UACnB;QACF,CAAC;QACDE,KAAK,EAAE;UACLC,IAAI,EAAE;YACJC,QAAQ,EAAE,EAAE,CAAE;UAChB,CAAC;UACDC,OAAO,EAAE;YACPC,QAAQ,EAAE,GAAG,CAAE;UACjB;QACF;MACF;IAiBF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,aAAa,GAAGvB,WAAW,CAAEwB,MAAM,IAAK;IAC5CzB,QAAQ,CAACyB,MAAM,CAAC;IAChB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBAAOrB,OAAA,CAACL,SAAS;IAAC2B,EAAE,EAAEpB,KAAK,CAACoB,EAAG;IAACC,IAAI,EAAEH,aAAc;IAAChB,OAAO,EAAEA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3E,CAAC;AAACxB,EAAA,CA5DIF,kBAAkB;AAAA2B,EAAA,GAAlB3B,kBAAkB;AA8DxB,eAAeA,kBAAkB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}